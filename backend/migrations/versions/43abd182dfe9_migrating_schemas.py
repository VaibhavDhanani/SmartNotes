"""migrating schemas

Revision ID: 43abd182dfe9
Revises: 
Create Date: 2025-06-01 09:34:08.778854

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = '43abd182dfe9'
down_revision: Union[str, None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('users',
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('username', sa.String(), nullable=False),
    sa.Column('email', sa.String(), nullable=False),
    sa.Column('gender', sa.String(), nullable=True),
    sa.Column('full_name', sa.String(), nullable=True),
    sa.Column('hashed_password', sa.String(), nullable=False),
    sa.PrimaryKeyConstraint('user_id')
    )
    op.create_index(op.f('ix_users_email'), 'users', ['email'], unique=True)
    op.create_index(op.f('ix_users_user_id'), 'users', ['user_id'], unique=False)
    op.create_index(op.f('ix_users_username'), 'users', ['username'], unique=True)
    op.create_table('directories',
    sa.Column('dir_id', sa.String(length=36), nullable=False),
    sa.Column('dir_name', sa.String(length=50), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('parent_id', sa.String(length=36), nullable=True),
    sa.Column('color', sa.String(length=7), nullable=True),
    sa.ForeignKeyConstraint(['parent_id'], ['directories.dir_id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['users.user_id'], ),
    sa.PrimaryKeyConstraint('dir_id'),
    sa.UniqueConstraint('dir_name')
    )
    op.create_table('documents',
    sa.Column('doc_id', sa.String(length=36), nullable=False),
    sa.Column('doc_name', sa.String(length=50), nullable=False),
    sa.Column('content', sa.Text(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('directory_id', sa.String(length=36), nullable=False),
    sa.ForeignKeyConstraint(['directory_id'], ['directories.dir_id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['users.user_id'], ),
    sa.PrimaryKeyConstraint('doc_id'),
    sa.UniqueConstraint('doc_name')
    )
    op.create_table('access_documents',
    sa.Column('access_doc_id', sa.String(length=36), nullable=False),
    sa.Column('doc_id', sa.String(length=36), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('permission_type', sa.String(length=20), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.CheckConstraint("permission_type IN ('read', 'write', 'admin')", name='valid_permission_type'),
    sa.ForeignKeyConstraint(['doc_id'], ['documents.doc_id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['users.user_id'], ),
    sa.PrimaryKeyConstraint('access_doc_id'),
    sa.UniqueConstraint('doc_id', 'user_id', name='unique_doc_user_access')
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('access_documents')
    op.drop_table('documents')
    op.drop_table('directories')
    op.drop_index(op.f('ix_users_username'), table_name='users')
    op.drop_index(op.f('ix_users_user_id'), table_name='users')
    op.drop_index(op.f('ix_users_email'), table_name='users')
    op.drop_table('users')
    # ### end Alembic commands ###
